<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog.txt">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- write logs to file  -->
    <target xsi:type="File" name="allfile" fileName="C:\temp_Sae_Log\nlog-all-NotificationLog${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile-web" fileName="c:\temp_Sae_Log\nlog-own-NotificationLog${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile" fileName="c:\temp_Sae_Log\nlog_Trace_NotificationLog-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <target xsi:type="File" name="ScheduleLog" fileName="c:\temp_Sae_Log\nlog_NotificationLog-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->

    <logger name="*" minlevel="Trace" writeTo="allfile"  enabled="false" />
    <logger name="Microsoft.* " maxlevel="Info" writeTo="ownFile" final="true"  enabled="false" />
    <logger name="*" minlevel="Trace" writeTo="ownFile-web"  enabled="false" />
    <logger name="Notification.*" level="Info" writeTo="ownFile"  enabled="false" />

    <logger name="Notification.*" levels="Warn,Error,Info" writeTo="NotificationLog"  enabled="true" />

    <!-- Exemplo -->
    <!--<logger name="Name.Space.*" minlevel="Debug" maxlevel="Error" final="true" />-->
    <!--<logger name="Name.Space.Class1" levels="Debug,Error" writeTo="f1" />-->
  </rules>
</nlog>

<!--name – logger name filter - may include wildcard characters (* and ?)
minlevel – minimal level to log
maxlevel – maximum level to log
level – single level to log
levels - comma separated list of levels to log
writeTo – comma separated list of targets to write to
final – no rules are processed after a final rule matches
enabled - set to false to disable the rule without deleting it
ruleName - rule identifier to allow rule lookup with Configuration.FindRuleByName and Configuration.RemoveRuleByName. Introduced in NLog 4.6.4-->

<!--
Fatal -	Something bad happened; application is going down
Error -	Something failed; application may or may not continue
Warn	- Something unexpected; application will continue
Info	- Normal behavior like mail sent, user updated profile etc.
Debug -	For debugging; executed query, user authenticated, session expired
Trace -	For trace debugging; begin method X, end method X-->

<!--
/* Level 0 LogTrace */
/* Level 1 LogDebug */
/* Level 2 LogInformation */
/* Level 3 LogWarning */
/* Level 4 LogError */
/* Level 5 LogCritical */-->